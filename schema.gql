# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserResponseDTO {
  _id: ID!
  name: String!
  about: String!
  email: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TokenResponseDTO {
  email: String!
  token: String!
}

type ChatRoomResponseDTO {
  _id: ID!
  name: String!
  description: String!
  isGroupChat: Boolean!
  members: [ID!]!
  admins: [ID!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MessageResponseDTO {
  _id: ID!
  senderId: ID!
  message: String!
  isGroupChat: Boolean!
  roomId: ID!
  members: [ID!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  allUsers(startId: String, skip: Float, limit: Float): [UserResponseDTO!]!
  findUserByEmail(email: String!): UserResponseDTO
  findUserById(id: String!): UserResponseDTO
  findMultipleUsersByEmail(emails: [String!]!): [UserResponseDTO!]
  publicRoute: String!
  findRoom(roomId: String!): ChatRoomResponseDTO
  fetchNewMessages(lastMessageDate: DateTime, startId: String, skip: Float, limit: Float): [MessageResponseDTO!]
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): UserResponseDTO!
  updateUser(id: String!, updateUserInput: UpdateUserInput!): UserResponseDTO!
  removeUser(id: String!): String!
  login(loginUserInput: LoginInput!): TokenResponseDTO!
  createGroupChatRoom(createChatRoomInput: CreateChatRoomInput!): ChatRoomResponseDTO!
  addMember(roomId: ID!, members: [String!]!): ChatRoomResponseDTO
  addAdmin(roomId: ID!, members: [String!]!): ChatRoomResponseDTO
  removeMember(roomId: ID!, members: [String!]!): ChatRoomResponseDTO
  removeAdmin(roomId: ID!, members: [String!]!): ChatRoomResponseDTO
  createGroupMessage(createMessageInput: CreateGroupMessageDto!): MessageResponseDTO!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
  about: String
}

input UpdateUserInput {
  name: String
  email: String
  password: String
  about: String
}

input LoginInput {
  username: String!
  password: String!
}

input CreateChatRoomInput {
  name: String!
  description: String!
  isGroupChat: Boolean = false
  members: [String!]!
  admins: [String!]
}

input CreateGroupMessageDto {
  roomId: ID!
  message: String!
}